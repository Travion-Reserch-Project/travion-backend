name: Build Only - No Deployment
# Approach 2: Infrastructure-Controlled Deployment
# This file replaces the deployment section in service repos

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: travion-backend

jobs:
  # Job 1: Run tests and linting
  test:
    name: Test & Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint
        continue-on-error: true

      - name: Run type check
        run: npm run type-check

      - name: Run tests
        run: npm test

      - name: Build TypeScript
        run: npm run build

  # Job 2: Build and push Docker image
  build-and-push:
    name: Build & Push Docker Image
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    permissions:
      contents: read
      packages: write

    outputs:
      image-tag: ${{ steps.image-output.outputs.tag }}
      image-digest: ${{ steps.build.outputs.digest }}
      branch: ${{ github.ref_name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/travion-reserch-project/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=develop,enable=${{ github.ref == 'refs/heads/develop' }}
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=semver,pattern={{version}}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Output image tag for security scan
        id: image-output
        run: |
          echo "tag=ghcr.io/travion-reserch-project/${{ env.IMAGE_NAME }}:${{ github.ref_name }}" >> $GITHUB_OUTPUT

      - name: Image built successfully
        run: |
          echo "âœ… Image built and pushed to GHCR"
          echo "ðŸ“¦ Tags: ${{ steps.meta.outputs.tags }}"
          echo "ðŸ”— Image: ghcr.io/travion-reserch-project/${{ env.IMAGE_NAME }}:${{ github.ref_name }}"

  # Job 3: Security scanning
  security-scan:
    name: Security Scan
    needs: build-and-push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ needs.build-and-push.outputs.image-tag }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          exit-code: '0'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Run Trivy in table format
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ needs.build-and-push.outputs.image-tag }}
          format: 'table'
          severity: 'CRITICAL,HIGH,MEDIUM'

  # Job 4: Trigger infrastructure deployment
  trigger-deployment:
    name: Trigger Infrastructure Deployment
    needs: [build-and-push, security-scan]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Trigger infrastructure deployment workflow
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.INFRASTRUCTURE_REPO_TOKEN }}
          repository: Travion-Reserch-Project/infrastructure
          event-type: deploy-backend
          client-payload: |
            {
              "service": "backend",
              "branch": "${{ github.ref_name }}",
              "sha": "${{ github.sha }}",
              "image": "${{ needs.build-and-push.outputs.image-tag }}",
              "triggered_by": "${{ github.actor }}"
            }

      - name: Deployment triggered
        run: |
          echo "âœ… Infrastructure deployment triggered"
          echo "ðŸ”— Check: https://github.com/Travion-Reserch-Project/infrastructure/actions"
          echo "ðŸ“¦ Service: backend"
          echo "ðŸŒ¿ Branch: ${{ github.ref_name }}"
